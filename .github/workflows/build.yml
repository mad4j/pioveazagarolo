# This is a basic workflow to help you get started with Actions

name: Update Weather Data

# Controls when the workflow will run
on:
  # Run every hour
  schedule:
    - cron: '0 * * * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the changed files back to the repository.
      contents: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # full history needed for amend + force push

      # Runs a single command using the runners shell
      - name: Retrieve Weather Data from external site
        run: |
          curl 'https://api.open-meteo.com/v1/forecast?latitude=41.837610&longitude=12.831867&hourly=precipitation,precipitation_probability,temperature_2m,apparent_temperature,wind_speed_10m,wind_direction_10m&daily=sunrise,sunset,temperature_2m_max,temperature_2m_min,weather_code,precipitation_sum,precipitation_probability_max&timezone=auto&forecast_days=3&current=temperature_2m,rain,weather_code,surface_pressure,precipitation,relative_humidity_2m,is_day,apparent_temperature,wind_speed_10m,wind_direction_10m' > data.json
          cat data.json
          # TZ="Europe/Rome" date +"%F %R" > lastupdate.txt
          LAST_UPDATE=$(TZ="Europe/Rome" date +"%F %R")
          jq --arg update "$LAST_UPDATE" '. += {"last_update": $update}' data.json > temp.json && mv temp.json data.json

      # Retrieve Air Quality Data and merge with weather data
      - name: Retrieve Air Quality Data from Open-Meteo
        run: |
          # Fetch air quality data for the same coordinates and time period
          curl 'https://air-quality-api.open-meteo.com/v1/air-quality?latitude=41.837610&longitude=12.831867&current=european_aqi&hourly=european_aqi&daily=european_aqi_max&timezone=auto&forecast_days=3' > air-quality.json
          cat air-quality.json
          # Merge air quality data into the main data.json file
          jq -s '.[0] + {"air_quality": .[1]}' data.json air-quality.json > merged.json && mv merged.json data.json
          # Clean up temporary file
          rm air-quality.json

      # Update actual precipitation data
      - name: Update actual precipitation data
        run: |
          node _scripts/update-precipitation.js
      
      # Validate renamed precipitation data file
      - name: Validate data-precipitations.json
        run: |
          if [ ! -f data-precipitations.json ]; then echo "data-precipitations.json missing"; exit 1; fi
          jq '.' data-precipitations.json > /dev/null || (echo "Invalid JSON in data-precipitations.json" && exit 2)
     
      # Commit changes rewriting (amending) last commit to avoid growing history
      - name: Commit updated weather data (rolling amend)
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          # Add only the generated data files (extend if more files are produced)
          git add data.json data-precipitations.json || true
          # If nothing staged, exit gracefully
          if git diff --cached --quiet; then
            echo "No data changes to commit";
            exit 0;
          fi
          # If repository already has at least one commit, amend it; otherwise create initial commit
          if git rev-parse --verify HEAD >/dev/null 2>&1; then
            git commit --amend -m "chore: aggiornamento dati meteo (rolling)"
          else
            git commit -m "chore: primo commit dati meteo"
          fi
          # Force push with lease to safely update remote (requires force-push allowed on branch)
          git push --force-with-lease

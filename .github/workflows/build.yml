# This is a basic workflow to help you get started with Actions

name: Update Weather Data

# Controls when the workflow will run
on:
  # Run every 2 hours (già impostato)
  schedule:
    - cron: '0 */2 * * *'
  # Manual trigger
  workflow_dispatch:
  # Rigenera build-info su ogni push su main
  push:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the changed files back to the repository.
      contents: write

    env:
      SKIP_BUILD_INFO_COMMIT: ''

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # necessario per recuperare info commit corretta

      - name: Retrieve Weather Data from external site (solo schedule)
        if: github.event_name == 'schedule'
        run: |
          curl 'https://api.open-meteo.com/v1/forecast?latitude=41.8416&longitude=12.8154&hourly=precipitation,precipitation_probability&daily=temperature_2m_max,temperature_2m_min,weather_code,precipitation_sum,precipitation_probability_max&timezone=auto&forecast_days=3' > data.json
          cat data.json
          LAST_UPDATE=$(TZ="Europe/Rome" date +"%F %R")
          jq --arg update "$LAST_UPDATE" '. += {"last_update": $update}' data.json > temp.json && mv temp.json data.json
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Generate build info (tutti gli eventi)
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm install; fi
          npm run build-info

      - name: Verifica se commit precedente è già build-info
        id: check_prev
        run: |
          LAST_MSG=$(git log -1 --pretty=%s)
          echo "Ultimo commit: $LAST_MSG"
          if [[ "$LAST_MSG" == ci(build-info):* ]]; then
            echo "SKIP_BUILD_INFO_COMMIT=1" >> $GITHUB_ENV
          fi

      - name: Commit dati + build-info (schedule)
        if: github.event_name == 'schedule'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "data: aggiorna dataset e build-info"
          file_pattern: data.json build-info.json

      - name: Commit solo build-info (push)
        if: github.event_name == 'push' && env.SKIP_BUILD_INFO_COMMIT != '1'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "ci(build-info): aggiorna build-info"
          file_pattern: build-info.json
